############################################################################
############################################################################
# File: minimization.MoS2
# Description: Energy minimization at 0 K
# Developer: Meshal Alawein, EECS PhD student at UC Berkeley
# Contact: meshal@berkeley.edu
############################################################################
############################################################################

variable                                                case equal 1                                                                                          # Define case [CASE 1: variable-cell minimization; CASE 2: fixed-cell minimization]

if "${case} == 1" then "variable caseString string Variable-cell"

if "${case} == 2" then "variable caseString string Fixed-cell"

########## GLOBAL VARIABLES ##########

# Simulation parameters
variable                                                eTol equal 1e-15                                                                                      # Define e_tol
variable                                                fTol equal 1e-15                                                                                      # Define f_tol
variable                                                maxIter equal 20000                                                                                   # Define max_iter
variable                                                maxEval equal 20000                                                                                   # Define max_eval

# Case 1 (variable-cell relaxation)
variable                                                k loop 10000                                                                                          # Define k
variable                                                VmaxChange equal 0.0001                                                                               # Define V_{max,change} [Ang^3] [NOTE: volume change is VmaxChange*100%, e.g. VmaxChange = 0.001 -> 0.1% change in one iteration]

# Part 2 (fixed-cell relaxation)
# No external parameters to be defined


############################ Initialization ############################
units                                                   metal                                                                                                                    # Style of units (lj, real, metal, si, cgs, electron, micro, nano) {default = lj}
dimension                                               3                                                                                                                                # Dimension of simulation (2, 3) {default = 3}
newton                                                  on                                                                                                                       # Newton's 3rd law for pairwise and bonded interactions {default = on}
boundary                                                p p p                                                                                                                    # Style of boundaries (p, f, s, m) {default = p p p}
atom_style                                              atomic                                                                                                                   # Style of atoms (atomic, bond, full, ...) {default = atomic}
box                                                     tilt large                                                                                                               # Set tilt constraint of simulation box


############################ System definition ############################
# Read data
read_data                               1x10-20.lmp                                          # Read data file
replicate                                               1 1 1                                                                                                                    # Cell replication

group                                                   MoGroup type 2                                                                                                   # Define a group (Mo atoms)
group                                                   SGroup type 1                                                                                                    # Define a group (S atoms)

variable                                                dx1 equal 0                                                                                                          # Define dx1 [Ang]
variable                                                dx2 equal 0                                                                                                              # Define dx2 [Ang]
change_box                                              all x delta ${dx1} ${dx2}                                                                        # Change box
variable                                                dy1 equal 0                                                                                                          # Define dy1 [Ang]
variable                                                dy2 equal 0                                                                                                          # Define dy2 [Ang]
change_box                                              all y delta ${dy1} ${dy2}                                                                                # Change box
variable                                                dz1 equal 0                                                                                                              # Define dz1 [Ang]
variable                                                dz2 equal 0                                                                                                          # Define dz2 [Ang]
change_box                                              all z delta ${dz1} ${dz2}                                                                                # Change box

############################ Simulation settings ############################
# Force field coefficients
pair_style                                              rebomos                                                                                                                  # Set the formulas LAMMPS uses to compute pairwise interactions
pair_coeff                                              * * MoS.REBO.set5b M S                                                                                   # Pairwise force field coefficients


# Variables and computation
variable                                                Lx equal lx                                                                                                      # Define Lx [Ang]
variable                                                Ly equal ly                                                                                      # Define Ly [Ang]
variable                                                Lz equal lz                                                                              # Define Lz [Ang]
variable                                                V equal vol                                                                              # Define V [Ang]
variable                                                t equal 6.09                                                                                                     # Define t (interatomic spacing) [Ang] [NOTE: defined as Mo-Mo vertical distance ~ 0.615 nm = 6.15 Ang]
compute                                                 T all temp                                                                                                       # Compute T [K]
compute                                                 P all pressure T                                                                                         # Compute P [Bar]
compute                                                 EPTotal all pe                                                                                           # Compute E_P [eV]
compute                                                 EPAtom all pe/atom                                                                                       # Compute E_{P,atom} [eV/atom]
compute                                                 Satom all stress/atom T                                                                          # Compute S_atom [Bar*Ang^3/atom] [note: stress*volume formulation] [NOTE: no Lennard-Jones tail corrections]
compute                                                 S all reduce sum c_Satom[*]                                                                  # Compute S [Bar*Ang^3] [NOTE: by summing the components of S_atom for all atoms to a global total S]
variable                                                Pxx equal "pxx/10000"                                                                                # Define Pxx [GPa] [NOTE: 1 Bar = 100 kPa = 1/10000 GPa]
variable                                                Pyy equal "pyy/10000"                                                                                    # Define Pyy [GPa] [NOTE: 1 Bar = 100 kPa = 1/10000 GPa]
variable                                                Pzz equal "pzz/10000"                                                                                    # Define Pzz [GPa] [NOTE: 1 Bar = 100 kPa = 1/10000 GPa]
variable                                        Sxx equal "c_S[1]/10000"                                                                                 # Define Sxx [GPa*Ang^3]
variable                                        Syy equal "c_S[2]/10000"                                                                                 # Define Syy [GPa*Ang^3]
variable                                        Szz equal "c_S[3]/10000"                                                                                 # Define Szz [GPa*Ang^3]
variable                                        Sxy equal "c_S[4]/10000"                                                                                 # Define Sxy [GPa*Ang^3]
variable                                        Sxz equal "c_S[5]/10000"                                                                                 # Define Sxz [GPa*Ang^3]
variable                                        Syz equal "c_S[6]/10000"                                                                                 # Define Syz [GPa*Ang^3]
variable                                        Ptheor equal -(c_S[1]+c_S[2]+c_S[3])/(3*$V*10000)                # Define P=-(Sxx+Syy+Szz)/(d*V) [Bar] [NOTE: d=1,2,3; we use d=3 here]
variable                                                force_atom atom sqrt(fx*fx+fy*fy+fz*fz)
variable                                                force_atomxy atom sqrt(fx*fx+fy*fy)
variable                                                force_atomxz atom sqrt(fx*fx+fz*fz)
variable                                                force_atomyz atom sqrt(fy*fy+fz*fz)
compute                                                 allforce all reduce max v_force_atom
compute                                                 allforcexy all reduce max v_force_atomxy
compute                                                 allforcexz all reduce max v_force_atomxz
compute                                                 allforceyz all reduce max v_force_atomyz
variable                                                Ftot equal "c_allforce"
variable                                                Fxy equal "c_allforcexy"
variable                                                Fxz equal "c_allforcexz"
variable                                                Fyz equal "c_allforceyz"

# Simulation parameters
min_style                                               cg                                                                                                                              # Minimization algorithm
min_modify                                      dmax 0.1 line quadratic norm two                                                                # Modify the minimization algorithm options [NOTE: forcezero search can be more efficient than quadratic for some systems. backtrack always find a minimum, but individual atomic forces may be large than desired]
neighbor                                                2.0 bin                                                                                                                 # Skin distance of pairwise atoms [Ang] [NOTE: all atom paris within neighbor cutoff distance = force cutoff + skin distance, are stored in the pairwise neighbor lists]
neigh_modify                                    every 1 delay 0 check yes                                                                               # Modify the neighbor lists building algorithm

# Output options
variable                                                Nprint equal 100                                                                                                # Define Nprint
thermo                                                  ${Nprint}                                                                                                               # Output thermodynamic info every Nprint-timesteps {default = 0}
thermo_style                                    custom &
                                                                step time &
                                                                temp press v_Ptheor pe ke etotal &
                                                                lx ly lz vol &
                                                                fnorm v_Fxy v_Fxz v_Fyz v_Ftot &
                                                                v_Pxx v_Pyy v_Pzz &
                                                                v_Sxx v_Syy v_Szz


variable                                                Ndump equal 10                                                                                                  # Define Ndump
dump                                                    dumpInitial all custom ${Ndump} A1-dump_Initialcoords.dump  &
                                                                x y z type                                                                                                              # Dump a snapshot of per atom quantities every Ndump-timesteps
minimize                                                1 1 0 0
undump                                                  dumpInitial                                                                                             # Turn off a previously defined dump (i.e., close the file associated with the dump)


dump                                                    dumpAll all custom ${Ndump} A3-dump_Allcoords.dump  &
                                                                x y z type                                                                                                              # Dump a snapshot of per atom quantities every Ndump-timesteps
dump_modify                                     dumpAll time yes                                                                                                # Modify the parameters of the dump command

############################ Run a simulation ############################

if "${case} != 1" then "jump SELF notCase1"

#===============================================================================================================================================#
#===============================================================================================================================================#
#====================================================== CASE #1: Variable-cell minimization ====================================================#
#===============================================================================================================================================#
#===============================================================================================================================================#
label                                               variableCell

variable                                                Ndump equal 100                                                                                      # Define Ndump
dump                                                    dumpCoords all custom ${Ndump} B0-dump_coordsVariableCellMinimization.txt  &
                                                                x y z type                                                                                   # Dump a snapshot of per atom quantities every Ndump-timesteps

#======== ENERGY MINIMIZATION ========#
variable                                                PxTarget equal 0.0                                                                                   # Define P_{x,target} [Bar]
variable                                                PyTarget equal 0.0                                                                                    # Define P_{y,target} [Bar]
variable                                                PzTarget equal 0.0                                                                                    # Define P_{z,target} [Bar]
variable                                                PxyTarget equal 0.0                                                                                      # Define P_{xy,target} [Bar] [NOTE: only for triclinic box]
variable                                                PxzTarget equal 0.0                                                                                   # Define P_{xz,target} [Bar] [NOTE: only for triclinic box]
variable                                                PyzTarget equal 0.0                                                                                   # Define P_{yz,target} [Bar] [NOTE: only for triclinic box]
variable                                                PisoTarget equal 0.0                                                                                 # Define P_{iso,target} [Bar]
variable                                                PanisoTarget equal 0.0                                                                               # Define P_{aniso,target} [Bar]
variable                                                PtriTarget equal 0.0                                                                                 # Define P_{tri,target} [Bar]

print                                                   "Nstep T (K)   P (GPa)   E_P (eV)   E_K (eV)   E_total (eV)   L_x (Ang)   L_y (Ang)   L_z (Ang)   V (Ang^3)   P_xx (GPa)   P_yy (GPa)   P_zz (GPa)" &
                                                                file B1-variableCellMinimizationData.txt screen no

# Box relaxation + minimization loop
label                                                   variableCellLoop

        # Apply a small perturbation to the structure
        #displace_atoms  all random 0.01 0.01 0.01 12345

        fix                                             relaxBox all box/relax &
                                    y 0 &
                                                                vmax ${VmaxChange}                                                                                   # Relax the box during energy minimization while keeping atomic positions fixed

        print "+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
        print "[                STARTING: CG minimization (MINIMIZATION [BOX-RELAXATION]               ]"
        minimize                                                ${eTol} ${fTol} ${maxIter} ${maxEval}                                                   # Perform an energy minimization of the system: etol ftol maxiter maxeval
        print "[                COMPLETED: CG minimization (MINIMIZATION [BOX RELAXATION])                ]"
        print "---------------------------------------------------------------------------------------"

        unfix                                           relaxBox                                                                                             # Turn off a fix

        print "+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
        print "[                STARTING: CG minimization (MINIMIZATION [MINIMIZATION])               ]"
        minimize                                                ${eTol} ${fTol} ${maxIter} ${maxEval}                                                   # Perform an energy minimization of the system: etol ftol maxiter maxeval
        print "[                COMPLETED: CG minimization (MINIMIZATION [MINIMIZATION])                ]"
        print "---------------------------------------------------------------------------------------"

        print                                           "$(step) $(temp:%.3f) $(press/10000:%.3f)   $(pe:%.3f)   $(ke:%.3f)     $(etotal:%.3f)       $(v_Lx:%.4f)     $(v_Ly:%.3f)      $(v_Lz:%.3f)      $(v_V:%.3f)  $(v_Pxx:%.3f)       $(v_Pyy:%.3f)       $(v_Pzz:%.3f)" &
                                                                append B1-variableCellMinimizationData.txt screen no

        next                                            k
        jump                                            SELF variableCellLoop
label                                                   variableCellLoopBreak

undump                                                  dumpCoords                                                                                           # Turn off a previously defined dump (i.e., close the file associated with the dump)

label                                                   notCase1





if "${case} != 2" then "jump SELF notCase2"

#===============================================================================================================================================#
#===============================================================================================================================================#
#====================================================== CASE #2: Fixed-cell minimization =======================================================#
#===============================================================================================================================================#
#===============================================================================================================================================#
label                                               fixedCell

variable                                                Ndump equal 10                                                                                       # Define Ndump
dump                                                    dumpCoords all custom ${Ndump} B0-dump_coordsFixedCellMinimization.txt  &
                                                                x y z type                                                                                   # Dump a snapshot of per atom quantities every Ndump-timesteps

print                                                   "Nstep T (K)   P (GPa)   E_P (eV)   E_K (eV)   E_total (eV)   L_x (Ang)   L_y (Ang)   L_z (Ang)   V (Ang^3)   P_xx (GPa)   P_yy (GPa)   P_zz (GPa)" &
                                                                file B3-fixedCellMinimizationData.txt screen no

#======== ENERGY MINIMIZATION ========#
print "+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
print "[                STARTING: CG minimization (MINIMIZATION)               ]"
minimize                                                ${eTol} ${fTol} ${maxIter} ${maxEval}                                           # Perform an energy minimization of the system: etol ftol maxiter maxeval
print "[                COMPLETED: CG minimization (MINIMIZATION)                ]"
print "---------------------------------------------------------------------------------------"

print                                                   "$(step) $(temp:%.3f) $(press/10000:%.3f)   $(pe:%.3f)   $(ke:%.3f)     $(etotal:%.3f)       $(v_Lx:%.4f)     $(v_Ly:%.3f)      $(v_Lz:%.3f)      $(v_V:%.3f)  $(v_Pxx:%.3f)       $(v_Pyy:%.3f)       $(v_Pzz:%.3f)" &
                                                                append B3-fixedCellMinimizationData.txt screen no

undump                                                  dumpCoords                                                                                           # Turn off a previously defined dump (i.e., close the file associated with the dump)

label                                               notCase2





undump                                                  dumpAll                                                                                              # Turn off a previously defined dump (i.e., close the file associated with the dump)

dump                                                    dumpFinal all custom 1 A2-dump_Finalcoords.txt  &
                                                                x y z type                                                                                   # Dump a snapshot of per atom quantities every Ndump-timesteps
minimize                                                1 1 0 0
undump                                                  dumpFinal                                                                                            # Turn off a previously defined dump (i.e., close the file associated with the dump)

print "ALL SIMULATIONS COMPLETED!"